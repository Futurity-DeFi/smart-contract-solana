name: Futurity ‚Äì Pre-check ‚Ä¢ Build ‚Ä¢ Deploy ‚Ä¢ Verify

on:
  push:
    branches: [main]      # change if you deploy from another branch
  workflow_dispatch:

env:
  ANCHOR_VERSION: v0.31.1
  DOCKER_DEFAULT_PLATFORM: linux/amd64
  CARGO_INCREMENTAL: "0"
  # ‚¨áÔ∏è  Devnet endpoint; switch to mainnet-beta for production
  SOLANA_CLUSTER_URL: https://api.devnet.solana.com
  # -ud  = devnet,  -um = mainnet-beta
  VERIFY_FLAG: -ud
  PROGRAM_PUBKEY: 2PswCESR7U3MF9CL3B89qQFnJ9tac6ucGVQR3Zm7xeGP

#####################################################################
# 1Ô∏è‚É£  PRE-CHECK  ‚Äì fail fast if IDs don‚Äôt match
#####################################################################
jobs:
  precheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 1}

      - name: üóùÔ∏è  Restore PROGRAM_KEYPAIR
        run: |
          echo '${{ secrets.PROGRAM_KEYPAIR }}' > program-keypair.json
          chmod 600 program-keypair.json

      - name: üîß Install Solana CLI (quick)
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v1.18.11/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: ‚úÖ Validate Program ID consistency
        shell: bash
        run: |
          EXPECTED=$(solana-keygen pubkey program-keypair.json)
          LIB_RS=$(grep -oP '(?<=declare_id!\(")[^"]+' program/src/lib.rs)
          TOML=$(grep -A1 '\[programs\.devnet\]' program/Anchor.toml | grep -oP '(?<=futurity = ")[^"]+')
          echo "Keypair : $EXPECTED"
          echo "lib.rs  : $LIB_RS"
          echo "Anchor  : $TOML"
          [[ "$EXPECTED" == "$LIB_RS" && "$EXPECTED" == "$TOML" ]] || {
            echo "‚ùå Program ID mismatch ‚Äì aborting."; exit 1; }

#####################################################################
# 2Ô∏è‚É£  BUILD  ‚Äì deterministic Anchor build
#####################################################################
  build:
    needs: precheck
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 1}

      # ---- Anchor CLI cache (binary only) ----
      - name: üíæ Cache Anchor CLI
        id: anchor-cache
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/anchor
          key: anchor-${{ runner.os }}-${{ env.ANCHOR_VERSION }}

      # ---- Install Anchor if cache miss ----
      - name: ‚ö° Install Anchor CLI
        if: steps.anchor-cache.outputs.cache-hit != 'true'
        run: |
          cargo install --git https://github.com/coral-xyz/anchor \
            --tag $ANCHOR_VERSION --locked anchor-cli

      # ---- Cargo deps cache ----
      - name: üíæ Cache cargo deps
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      # ---- Verifiable build ----
      - name: üèóÔ∏è  Verifiable Build
        working-directory: program
        run: |
          anchor clean
          anchor build --verifiable

      # ---- Package artefacts ----
      - name: üì¶ Package artefacts
        run: |
          mkdir -p artefacts
          cp program/target/verifiable/futurity.so artefacts/
          cp program/target/idl/futurity.json      artefacts/
          shasum -a 256 artefacts/futurity.so >    artefacts/futurity.sha256

      - uses: actions/upload-artifact@v4
        with:
          name: futurity-${{ github.sha }}
          path: artefacts
          retention-days: 14

#####################################################################
# 3Ô∏è‚É£  DEPLOY  ‚Äì fee payer = DEPLOY_KEYPAIR, program id = PROGRAM_KEYPAIR
#####################################################################
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: mainnet       # put an ‚Äúapproval required‚Äù gate here if desired

    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 1}

      - uses: actions/download-artifact@v4
        with:
          name: futurity-${{ github.sha }}
          path: artefacts

      # ---- Restore keypairs ----
      - name: üóùÔ∏è  Restore keypairs
        run: |
          echo '${{ secrets.PROGRAM_KEYPAIR }}' > program-keypair.json
          echo '${{ secrets.DEPLOY_KEYPAIR }}'  > deploy-keypair.json
          chmod 600 program-keypair.json deploy-keypair.json

      # ---- Install Solana CLI ----
      - name: üîß Install Solana CLI
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v1.18.11/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      # ---- Deploy ----
      - name: üöÄ Deploy Program
        run: |
          solana --version
          solana config set --url $SOLANA_CLUSTER_URL --keypair deploy-keypair.json
          solana program deploy artefacts/futurity.so \
            --program-id program-keypair.json \
            --upgrade-authority program-keypair.json

#####################################################################
# 4Ô∏è‚É£  VERIFY ‚Äì prove on-chain == this commit
#####################################################################
  verify:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 1}

      # ---- Install solana-verify (cached) ----
      - name: üíæ Cache solana-verify
        id: verify-cache
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/solana-verify
          key: solana-verify-${{ runner.os }}-0.4.0

      - name: Install solana-verify
        if: steps.verify-cache.outputs.cache-hit != 'true'
        run: cargo install solana-verify --locked

      # ---- Verify reproducibility ----
      - name: ‚úÖ Verify on-chain binary
        run: |
          solana-verify verify-from-repo \
            ${{ env.VERIFY_FLAG }} \
            --url ${{ env.SOLANA_CLUSTER_URL }} \
            --program-id ${{ env.PROGRAM_PUBKEY }} \
            --library-name futurity \
            --commit-hash ${{ github.sha }} \
            --mount-path program/programs/futurity \
            h
