name: Futurity – Pre-check • Build • Deploy • Verify

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  ANCHOR_VERSION: v0.31.1
  DOCKER_DEFAULT_PLATFORM: linux/amd64
  CARGO_INCREMENTAL: "0"
  SOLANA_CLUSTER_URL: https://api.devnet.solana.com
  VERIFY_FLAG: -ud
  PROGRAM_PUBKEY: 6MzVX4hQAmh18RSYt2u9LYC2ju2t8LdavfP5jtAgzCje

jobs:
  precheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 1}

      - name: Restore program keypair & validate Program ID
        shell: bash
        run: |
          echo '${{ secrets.PROGRAM_KEYPAIR }}' > program-keypair.json
          chmod 600 program-keypair.json
          sudo apt-get update
          sudo apt-get install -y wget gnupg ca-certificates
          wget -qO - https://cli.solana.com/apt/solana-archive-keyring.gpg | sudo tee /usr/share/keyrings/solana-archive-keyring.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/solana-archive-keyring.gpg] https://cli.solana.com/apt stable main" | sudo tee /etc/apt/sources.list.d/solana.list
          sudo apt-get update
          sudo apt-get install -y solana-cli
          solana --version
          EXPECTED=$(solana-keygen pubkey program-keypair.json)
          LIB_RS=$(grep -oP '(?<=declare_id!\(")[^"]+' program/programs/futurity/src/lib.rs)
          TOML=$(grep -A2 '\[programs\.devnet\]' program/Anchor.toml | grep -oP '(?<=futurity = ")[^"]+')
          echo "Keypair : $EXPECTED"
          echo "lib.rs  : $LIB_RS"
          echo "Anchor  : $TOML"
          [[ "$EXPECTED" == "$LIB_RS" && "$EXPECTED" == "$TOML" ]] || { echo '❌ Program ID mismatch – aborting'; exit 1; }

  build:
    needs: precheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 1}

      - name: Cache Anchor CLI
        id: anchor-cache
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/anchor
          key: anchor-${{ runner.os }}-${{ env.ANCHOR_VERSION }}

      - name: Install Anchor CLI
        if: steps.anchor-cache.outputs.cache-hit != 'true'
        run: |
          cargo install --git https://github.com/coral-xyz/anchor --tag $ANCHOR_VERSION --locked anchor-cli

      - name: Cache cargo deps
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Verifiable Build
        working-directory: program
        run: |
          anchor clean
          anchor build --verifiable

      - name: Package artefacts
        run: |
          mkdir -p artefacts
          cp program/target/verifiable/futurity.so artefacts/
          cp program/target/idl/futurity.json artefacts/
          shasum -a 256 artefacts/futurity.so > artefacts/futurity.sha256

      - uses: actions/upload-artifact@v4
        with:
          name: futurity-${{ github.sha }}
          path: artefacts
          retention-days: 14

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 1}
      - uses: actions/download-artifact@v4
        with:
          name: futurity-${{ github.sha }}
          path: artefacts
      - name: Restore keypairs
        run: |
          echo '${{ secrets.PROGRAM_KEYPAIR }}' > program-keypair.json
          echo '${{ secrets.DEPLOY_KEYPAIR }}'  > deploy-keypair.json
          chmod 600 program-keypair.json deploy-keypair.json
      - name: Install Solana CLI
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v1.18.11/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
      - name: Deploy Program
        run: |
          solana --version
          solana config set --url $SOLANA_CLUSTER_URL --keypair deploy-keypair.json
          solana program deploy artefacts/futurity.so \
            --program-id program-keypair.json \
            --upgrade-authority program-keypair.json

  verify:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 1}
      - name: Cache solana-verify
        id: verify-cache
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/solana-verify
          key: solana-verify-${{ runner.os }}-0.4.0
      - name: Install solana-verify
        if: steps.verify-cache.outputs.cache-hit != 'true'
        run: cargo install solana-verify --locked
      - name: Verify on-chain binary
        run: |
          solana-verify verify-from-repo \
            ${{ env.VERIFY_FLAG }} \
            --url ${{ env.SOLANA_CLUSTER_URL }} \
            --program-id ${{ env.PROGRAM_PUBKEY }} \
            --library-name futurity \
            --commit-hash ${{ github.sha }} \
            --mount-path program/programs/futurity \
            --manifest-path program/programs/futurity/Cargo.toml

  mainnet:
    if: github.event_name == 'workflow_dispatch'
    needs: build
    runs-on: ubuntu-latest
    env:
      SOLANA_CLUSTER_URL: https://api.mainnet-beta.solana.com
      VERIFY_FLAG: -um
    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 1}
      - uses: actions/download-artifact@v4
        with:
          name: futurity-${{ github.sha }}
          path: artefacts
      - name: Restore keypairs
        run: |
          echo '${{ secrets.PROGRAM_KEYPAIR }}' > program-keypair.json
          echo '${{ secrets.DEPLOY_KEYPAIR }}'  > deploy-keypair.json
          chmod 600 program-keypair.json deploy-keypair.json
      - name: Install Solana CLI
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v1.18.11/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
      - name: Deploy to Mainnet
        run: |
          solana config set --url $SOLANA_CLUSTER_URL --keypair deploy-keypair.json
          solana program deploy artefacts/futurity.so \
            --program-id program-keypair.json \
            --upgrade-authority program-keypair.json
      - name: Cache solana-verify
        id: verify-cache-mainnet
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/solana-verify
          key: solana-verify-${{ runner.os }}-0.4.0
      - name: Install solana-verify
        if: steps.verify-cache-mainnet.outputs.cache-hit != 'true'
        run: cargo install solana-verify --locked
      - name: Verify mainnet binary
        run: |
          solana-verify verify-from-repo \
            ${{ env.VERIFY_FLAG }} \
            --url ${{ env.SOLANA_CLUSTER_URL }} \
            --program-id ${{ env.PROGRAM_PUBKEY }} \
            --library-name futurity \
            --commit-hash ${{ github.sha }} \
            --mount-path program/programs/futurity \
            --manifest-path program/programs/futurity/Cargo.toml
