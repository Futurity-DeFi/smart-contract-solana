name: Futurity • Pre-check → Build → Deploy → Verify

# ───────── triggers ─────────
on:
  push:
    branches: [main]

  workflow_dispatch:
    inputs:
      cluster:
        description: "For FINALIZE step: devnet or mainnet"
        type: choice
        default: devnet
        options: [devnet, mainnet]
        required: true
      confirm:
        description: "Type FINALIZE to confirm irreversible step"
        required: true
      program_id:
        description: "Override program-id (blank ⇒ default)"
        required: false
        default: ""

# ───────── global versions / constants ─────────
env:
  SOLANA_VERSION: 2.2.15-jito          # one source of truth
  DOCKER_DEFAULT_PLATFORM: linux/amd64
  CARGO_INCREMENTAL: "0"

  DEVNET_URL:  https://api.devnet.solana.com
  MAINNET_URL: https://api.mainnet-beta.solana.com

  PROGRAM_PUBKEY: GMaCbLs28PYev8gJoPCb1XSHaLpufNqGbNeXEz5c7jzv
  MOUNT_PATH: program/programs/futurity

permissions:
  contents: read

defaults:
  run:
    shell: bash

# ═════════ reusable blocks ═════════
install-scli: &install-scli
  - uses: actions/cache@v4
    id: solcache
    with:
      path: solana-release
      key: solana-${{ runner.os }}-${{ env.SOLANA_VERSION }}
  - if: steps.solcache.outputs.cache-hit != 'true'
    run: |
      ARCH=solana-release-x86_64-unknown-linux-gnu.tar.bz2
      URL="https://github.com/jito-foundation/jito-solana/releases/download/v${SOLANA_VERSION}/${ARCH}"
      curl -L --retry 5 --retry-delay 3 -o $ARCH "$URL"
      tar -xjf $ARCH
  - run: |
      echo "$PWD/solana-release/bin" >> $GITHUB_PATH
      solana --version

restore-keys: &restore-keys
  - run: |
      printf '%s' '${{ secrets.PROGRAM_KEYPAIR }}' > program.json
      printf '%s' '${{ secrets.DEPLOY_KEYPAIR }}'  > deploy.json
      chmod 600 program.json deploy.json

pull-svb: &pull-svb
  - uses: actions/cache@v4
    id: svb
    with:
      path: /tmp/svb_cache          # dummy path (small)
      key: svb-${{ env.SOLANA_VERSION }}
  - if: steps.svb.outputs.cache-hit != 'true'
    run: docker pull solanafoundation/solana-verifiable-build:${SOLANA_VERSION}

# ═════════ JOBS ═════════
jobs:
###############################################################################
# 1️⃣ PRE-CHECK
###############################################################################
  precheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 1}

      - <<: *install-scli
      - <<: *restore-keys

      - name: Validate Program ID
        run: |
          EXPECTED=$(solana-keygen pubkey program.json)
          echo "Keypair  : $EXPECTED"
          echo "Expected : $PROGRAM_PUBKEY"
          [[ "$EXPECTED" == "$PROGRAM_PUBKEY" ]]

###############################################################################
# 2️⃣ BUILD  (cargo build-sbf)
###############################################################################
  build:
    needs: precheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 1}

      - <<: *install-scli

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - working-directory: program
        run: cargo build-sbf

      - run: |
          mkdir artefacts
          cp program/target/deploy/futurity.so artefacts/
          shasum -a 256 artefacts/futurity.so > artefacts/futurity.sha256

      - uses: actions/upload-artifact@v4
        with:
          name: artefacts-${{ github.sha }}
          path: artefacts
          retention-days: 14

###############################################################################
# 3️⃣ DEPLOY (Devnet)
###############################################################################
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with: {name: artefacts-${{ github.sha }}, path: artefacts}

      - <<: *install-scli
      - <<: *restore-keys

      - name: Deploy to Devnet
        run: |
          solana config set --url $DEVNET_URL --keypair deploy.json
          solana program deploy artefacts/futurity.so \
            --program-id program.json \
            --upgrade-authority program.json

###############################################################################
# 4️⃣ VERIFY (Devnet, deterministic)
###############################################################################
  verify:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 1}

      - <<: *install-scli
      - <<: *pull-svb                         # cache Docker image

      - uses: actions/cache@v4
        id: verifycache
        with:
          path: ~/.cargo/bin/solana-verify
          key: solana-verify-${{ runner.os }}-0.4.0
      - if: steps.verifycache.outputs.cache-hit != 'true'
        run: cargo install solana-verify --locked

      - name: Deterministic verify
        run: |
          solana-verify verify-from-repo \
            --url $DEVNET_URL \
            --program-id $PROGRAM_PUBKEY \
            --library-name futurity \
            --commit-hash ${{ github.sha }} \
            --mount-path $MOUNT_PATH \
            --solana-version ${SOLANA_VERSION} \
            https://github.com/${{ github.repository }} \
            > verify.log 2>&1

          grep -q "Verification succeeded" verify.log && \
            echo "✅ Verification passed." || { cat verify.log; exit 1; }

###############################################################################
# 5️⃣ MAINNET DEPLOY  (manual gate)
###############################################################################
  mainnet-deploy:
    needs: verify
    runs-on: ubuntu-latest
    environment:
      name: mainnet
      url: https://explorer.solana.com/address/${{ env.PROGRAM_PUBKEY }}?cluster=mainnet-beta
    steps:
      # manual approval + fund check
      - name: Approve & ensure ≥2 SOL in deployer wallet
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: ${{ github.actor }}
          issue-body: >
            Ensure DEPLOY_KEYPAIR_MAINNET is funded (balance ≥ 2 SOL):
            `solana balance $(solana-keygen pubkey -f <(echo "${{ secrets.DEPLOY_KEYPAIR_MAINNET }}")) --url https://api.mainnet-beta.solana.com`

      - uses: actions/download-artifact@v4
        with: {name: artefacts-${{ github.sha }}, path: artefacts}

      - <<: *install-scli
      - <<: *pull-svb
      - run: |
          printf '%s' '${{ secrets.PROGRAM_KEYPAIR_MAINNET }}' > program-main.json
          printf '%s' '${{ secrets.DEPLOY_KEYPAIR_MAINNET }}'  > deploy-main.json
          chmod 600 program-main.json deploy-main.json

      - name: Deploy to Mainnet-beta
        run: |
          solana config set --url $MAINNET_URL --keypair deploy-main.json
          solana program deploy artefacts/futurity.so \
            --program-id program-main.json \
            --upgrade-authority program-main.json

      # remote & deterministic verify on mainnet
      - name: Verify on mainnet (deterministic)
        run: |
          solana-verify verify-from-repo \
            --url $MAINNET_URL \
            --program-id $PROGRAM_PUBKEY \
            --library-name futurity \
            --commit-hash ${{ github.sha }} \
            --mount-path $MOUNT_PATH \
            --solana-version ${SOLANA_VERSION} \
            https://github.com/${{ github.repository }}

      - name: OtterSec remote verify
        run: |
          solana-verify verify \
            --url $MAINNET_URL \
            --program-id $PROGRAM_PUBKEY \
            --library-name futurity \
            --solana-version ${SOLANA_VERSION} \
            --remote

      - name: Remove upgrade authority (best practice)
        run: |
          solana program set-upgrade-authority $PROGRAM_PUBKEY \
            --new-upgrade-authority 11111111111111111111111111111111 \
            --keypair deploy-main.json

###############################################################################
# 6️⃣ FINALIZE UPGRADE AUTHORITY (optional manual)
###############################################################################
  finalize-upgrade-authority:
    needs: [verify, mainnet-deploy]
    if: >
      (needs.verify.result == 'success') &&
      (github.event.inputs.confirm == 'FINALIZE')
    runs-on: ubuntu-latest
    steps:
      - <<: *install-scli
      - run: |
          if [[ "${{ github.event.inputs.cluster }}" == "mainnet" ]]; then
            URL=$MAINNET_URL
            printf '%s' '${{ secrets.DEPLOY_KEYPAIR_MAINNET }}' > deployer.json
          else
            URL=$DEVNET_URL
            printf '%s' '${{ secrets.DEPLOY_KEYPAIR }}' > deployer.json
          fi
          chmod 600 deployer.json
          PROG="${{ github.event.inputs.program_id || env.PROGRAM_PUBKEY }}"
          solana config set --url "$URL" --keypair deployer.json
          solana program show "$PROG" --url "$URL" >/dev/null || {
            echo "::error::Program not found"; exit 1; }
          solana program set-upgrade-authority "$PROG" \
            --new-upgrade-authority null
          solana program show "$PROG" --url "$URL"
