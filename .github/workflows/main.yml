name: Futurity • Pre-check → Build → Deploy → Verify

# ────────── triggers ──────────
on:
  push:
    branches: [main]

  workflow_dispatch:
    inputs:
      cluster:
        description: "For FINALIZE step (devnet/mainnet)"
        required: true
        default: devnet
        type: choice
        options: [devnet, mainnet]
      confirm:
        description: "Type FINALIZE to confirm irreversible action"
        required: true
      program_id:
        description: "Override program-id (blank ⇒ default)"
        required: false
        default: ""

# ────────── globals ──────────
env:
  SOLANA_VERSION: 2.2.15                 # tool-chain used by SVB + CLI
  DEVNET_URL:  https://api.devnet.solana.com
  MAINNET_URL: https://api.mainnet-beta.solana.com
  PROGRAM_PUBKEY: GMaCbLs28PYev8gJoPCb1XSHaLpufNqGbNeXEz5c7jzv
  MOUNT_PATH: program/programs/futurity
  DOCKER_DEFAULT_PLATFORM: linux/amd64
  CARGO_INCREMENTAL: "0"

permissions:
  contents: read

defaults:
  run:
    shell: bash

###############################################################################
# helper: install Solana CLI (cached)
###############################################################################
install_solana: &install_solana |
  ARCH=solana-release-x86_64-unknown-linux-gnu.tar.bz2
  if [[ ! -d solana-release ]]; then
    echo "⏬ Installing Solana CLI $SOLANA_VERSION"
    curl -L --retry 5 --retry-delay 3 -o $ARCH \
      "https://github.com/jito-foundation/jito-solana/releases/download/v${SOLANA_VERSION}-jito/${ARCH}"
    tar -xjf $ARCH
  fi
  export PATH="$PWD/solana-release/bin:$PATH"
  echo "$PWD/solana-release/bin" >> "$GITHUB_PATH"
  solana --version

###############################################################################
# 1️⃣ PRE-CHECK — validate Program ID
###############################################################################
jobs:
  precheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - uses: actions/cache@v4
        with:
          path: solana-release
          key: solana-${{ runner.os }}-${{ env.SOLANA_VERSION }}

      - name: Install Solana CLI
        run: *install_solana

      - name: Restore keypair & check ID
        run: |
          printf '%s' '${{ secrets.PROGRAM_KEYPAIR }}' > program.json
          chmod 600 program.json
          [[ "$(solana-keygen pubkey program.json)" == "$PROGRAM_PUBKEY" ]]

###############################################################################
# 2️⃣ BUILD — cargo build-sbf
###############################################################################
  build:
    needs: precheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - uses: actions/cache@v4
        with:
          path: solana-release
          key: solana-${{ runner.os }}-${{ env.SOLANA_VERSION }}

      - name: Install Solana CLI
        run: *install_solana

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install / upgrade solana-verify 0.4.0
        run: cargo install solana-verify --locked --force --version 0.4.0

      - name: Build SBF (verifiable)
        working-directory: program
        run: solana-verify build --library-name futurity

      - name: Package artefacts
        run: |
          mkdir artefacts
          cp program/target/deploy/futurity.so artefacts/
          shasum -a 256 artefacts/futurity.so > artefacts/futurity.sha256

      - uses: actions/upload-artifact@v4
        with:
          name: artefacts-${{ github.sha }}
          path: artefacts
          retention-days: 14

###############################################################################
# 3️⃣ DEPLOY — Devnet
###############################################################################
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with: { name: artefacts-${{ github.sha }}, path: artefacts }

      - uses: actions/cache@v4
        with:
          path: solana-release
          key: solana-${{ runner.os }}-${{ env.SOLANA_VERSION }}
      - name: Install Solana CLI
        run: *install_solana

      - name: Restore keypairs
        run: |
          printf '%s' '${{ secrets.PROGRAM_KEYPAIR }}' > program.json
          printf '%s' '${{ secrets.DEPLOY_KEYPAIR }}'  > deploy.json
          chmod 600 program.json deploy.json

      - name: Deploy to Devnet
        run: |
          solana config set --url $DEVNET_URL --keypair deploy.json
          solana program deploy artefacts/futurity.so \
            --program-id program.json \
            --upgrade-authority program.json

###############################################################################
# 4️⃣ VERIFY — Devnet deterministic
###############################################################################
  verify:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - uses: actions/cache@v4
        with:
          path: solana-release
          key: solana-${{ runner.os }}-${{ env.SOLANA_VERSION }}
      - name: Install Solana CLI
        run: *install_solana

      # cache SVB image
      - uses: actions/cache@v4
        id: svb
        with:
          path: /tmp/svb_cache
          key: svb-${{ env.SOLANA_VERSION }}
      - if: steps.svb.outputs.cache-hit != 'true'
        run: docker pull solanafoundation/solana-verifiable-build:${SOLANA_VERSION}

      # always install latest solana-verify 0.4.0+
      - name: Install / upgrade solana-verify 0.4.0
        run: cargo install solana-verify --locked --force --version 0.4.0

      - name: Deterministic verify (Devnet)
        run: |
          solana-verify verify-from-repo \
            --url $DEVNET_URL \
            --program-id $PROGRAM_PUBKEY \
            --library-name futurity \
            --commit-hash ${{ github.sha }} \
            --mount-path $MOUNT_PATH \
            --solana-version ${SOLANA_VERSION} \
            https://github.com/${{ github.repository }}

###############################################################################
# 5️⃣ MAINNET DEPLOY — manual gate
###############################################################################
  mainnet-deploy:
    needs: verify
    runs-on: ubuntu-latest
    environment:
      name: mainnet
      url: https://explorer.solana.com/address/${{ env.PROGRAM_PUBKEY }}?cluster=mainnet-beta
    steps:
      - name: Manual approval & fund check
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: ${{ github.actor }}
          issue-body: "Fund DEPLOY_KEYPAIR_MAINNET with ≥ 2 SOL, then approve."

      - uses: actions/download-artifact@v4
        with: { name: artefacts-${{ github.sha }}, path: artefacts }

      - uses: actions/cache@v4
        with:
          path: solana-release
          key: solana-${{ runner.os }}-${{ env.SOLANA_VERSION }}
      - name: Install Solana CLI
        run: *install_solana

      - name: Install / upgrade solana-verify 0.4.0
        run: cargo install solana-verify --locked --force --version 0.4.0

      - name: Restore mainnet keypairs
        run: |
          printf '%s' '${{ secrets.PROGRAM_KEYPAIR_MAINNET }}' > program-main.json
          printf '%s' '${{ secrets.DEPLOY_KEYPAIR_MAINNET }}'  > deploy-main.json
          chmod 600 program-main.json deploy-main.json

      - name: Deploy to mainnet-beta
        run: |
          solana config set --url $MAINNET_URL --keypair deploy-main.json
          solana program deploy artefacts/futurity.so \
            --program-id program-main.json \
            --upgrade-authority program-main.json

      - name: Verify on mainnet (deterministic)
        run: |
          solana-verify verify-from-repo \
            --url $MAINNET_URL \
            --program-id $PROGRAM_PUBKEY \
            --library-name futurity \
            --commit-hash ${{ github.sha }} \
            --mount-path $MOUNT_PATH \
            --solana-version ${SOLANA_VERSION} \
            https://github.com/${{ github.repository }}

      - name: OtterSec remote verify
        run: |
          solana-verify verify \
            --url $MAINNET_URL \
            --program-id $PROGRAM_PUBKEY \
            --library-name futurity \
            --solana-version ${SOLANA_VERSION} \
            --remote

      - name: Remove upgrade authority
        run: |
          solana program set-upgrade-authority $PROGRAM_PUBKEY \
            --new-upgrade-authority 11111111111111111111111111111111 \
            --keypair deploy-main.json

###############################################################################
# 6️⃣ FINALIZE — optional manual irreversible step
###############################################################################
  finalize-upgrade-authority:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.confirm == 'FINALIZE'
    needs: [verify, mainnet-deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v4
        with:
          path: solana-release
          key: solana-${{ runner.os }}-${{ env.SOLANA_VERSION }}
      - name: Install Solana CLI
        run: *install_solana

      - name: Restore deployer key & finalize
        run: |
          if [[ "${{ github.event.inputs.cluster }}" == "mainnet" ]]; then
            printf '%s' '${{ secrets.DEPLOY_KEYPAIR_MAINNET }}' > deployer.json
            URL=$MAINNET_URL
          else
            printf '%s' '${{ secrets.DEPLOY_KEYPAIR }}' > deployer.json
            URL=$DEVNET_URL
          fi
          chmod 600 deployer.json

          PID="${{ github.event.inputs.program_id || env.PROGRAM_PUBKEY }}"
          solana config set --url "$URL" --keypair deployer.json
          solana program set-upgrade-authority "$PID" \
            --new-upgrade-authority null
          solana program show "$PID" --url "$URL"
